---
import { Icon } from "astro-icon";

interface Project {
	title: string;
	description: string;
	slug: string;
	language: string;
	link: string;
	sourceCode: string;
}

const { project } = Astro.props as { project: Project };
---

<div
	class="max-w-sm transform overflow-hidden rounded-lg bg-gradient-to-br from-teal-300 to-blue-400 shadow-lg transition-transform duration-300 hover:scale-105 hover:shadow-xl dark:bg-gradient-to-br dark:from-gray-600 dark:to-gray-800 dark:shadow-lg dark:hover:shadow-xl"
>
	<div class="px-6 py-4">
		<div class="mb-2 text-xl font-bold text-white dark:text-gray-300">{project.title}</div>
		<p class="text-sm text-gray-800 dark:text-gray-300">{project.description}</p>
	</div>
	<hr class="mx-6 my-3 border-t border-gray-300 dark:border-gray-600" />
	<div class="px-6 py-2">
		<p class="mb-2 text-xs text-gray-700 dark:text-gray-400">Technologies:</p>
		<div class="flex flex-wrap gap-2">
			{
				project.language
					.split(",")
					.map((lang) => (
						<span class="rounded-full bg-teal-200 px-2 py-1 text-xs text-gray-700 dark:bg-indigo-200 dark:text-gray-800">
							{lang.trim()}
						</span>
					))
			}
		</div>
	</div>
	<hr class="mx-6 my-3 border-t border-gray-300 dark:border-gray-600" />
	<div class="flex items-end justify-between px-6 py-4">
		{
			project.link && (
				<a
					class="flex items-center text-blue-100 hover:underline dark:text-blue-400"
					target="_blank"
					href={project.link}
				>
					<Icon class="mr-2 h-6 w-6" name="mdi:web" aria-hidden="true" focusable="false" />
					View on Web
				</a>
			)
		}
		{project.link && project.sourceCode && <span class="mx-2">|</span>}
		{
			project.sourceCode && (
				<a
					class="flex items-center text-blue-100 hover:underline dark:text-blue-400"
					target="_blank"
					href={project.sourceCode}
				>
					<Icon class="mr-2 h-6 w-6" name="mdi:github" aria-hidden="true" focusable="false" />
					View on GitHub
				</a>
			)
		}
	</div>
</div>
